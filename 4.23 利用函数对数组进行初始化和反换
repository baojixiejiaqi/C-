#include <stdio.h>
void Init(int arr[], int sz) {
	int i = 0;
	for (i = 0; i < sz; i++) {
		arr[i] = 0;

	}
}
void Print(int arr[], int sz) {
	int i = 0;
	for (i = 0; i < sz; i++) {
		printf("%d ", arr[i]);
	}
	printf("\n");
}
void Reverse(int arr[], int sz) {
	int lift = 0;
	int right = sz-1;
	while (lift < right) {
		int tmep = 0;
		tmep = arr[lift];
		arr[lift] = arr[right];
		arr[right] = tmep;
		lift++;
		right--;
	}
}

int main()
{
	int arr[10] = { 1,2,3,4,5,6,7,8,9,10 };
	int sz = sizeof(arr) / sizeof(arr[0]);
	//Init(arr,sz);
	Print(arr,sz);
	Reverse(arr, sz);
	Print(arr, sz);
	return 0;
}
#include <stdio.h>//函数求反
int Strlen(char *str) {
	int count = 0;
	while (*str != '\0') {
		count++;
		str++;
	}
	return count;
}
void reverse(char arr[]) {
	int left = 0;
	int right = Strlen(arr)-1;
	while (left < right) {
		int tmp = arr[left];
		arr[left] = arr[right];
		arr[right] = tmp;
		left++;
		right--;
	}
}

int main()
{
	char arr[] = "abcedfghijklmn";
	reverse(arr);
	printf("%s\n", arr);
	return 0;
}
#include <stdio.h>//递归求反
int Strlen(char *str) {
	int count = 0;
	while (*str != '\0') {
		count++;
		str++;
	}
	return count;
}
void reverse(char arr[])//a b c d e f
{
	int len = Strlen(arr);
	char tmp =arr[0];
	arr[0] = arr[len - 1];
	arr[len - 1] = '\0';
	if (Strlen(arr + 1) >= 2) {
		reverse(arr + 1);
	}
	arr[len - 1] = tmp;

}

int main()
{
	char arr[] = "abcedfghijklmn";
	reverse(arr);
	printf("%s\n", arr);
	return 0;
}
