#include <stdio.h>
#pragma warning(disable : 4996)
#include<Windows.h>
#include<stdlib.h>
#include<string.h>
//struct Stu 
//{
//	char name[20];
//	int age;
//};
//int cmp_stu_by_age(const void* e1, const void* e2)
//{
//	return ((struct Stu*)e2)->age - ((struct Stu*)e1)->age;
//}
//void test()
//{
//	struct Stu s[] = { {"zhangsan",5},{"wangwu",9},{"laoliu",6} };
//	int sz = sizeof(s) / sizeof(s[0]);
//	qsort(s, sz, sizeof(s[0]), cmp_stu_by_age);
//}
void Swap(char* buf1, char* buf2, int width)
{
	int i = 0;
	for (i = 0; i <width; i++)
	{
		char tmp = *buf1;
		*buf1 = *buf2;
		*buf2 = tmp;
		buf1++;
		buf2++;
	}
}
void bubble_sort(void* base, int sz, int width, int (*cmp)(const void* e1, const void* e2))
//第一个参数是函数的起地址，第二个是函数的元素个数，第三个是一个元素占字节的大小，第四个是函数指针用来调用cmp函数来比较
{
	int i = 0;
	for (i = 0; i < sz-1 ; i++)
	{
		int j = 0;
		for (j = 0; j < sz - i - 1; j++)
		{
			if(cmp((char*)base + j*width,(char*)base + (j+1)*width)>0)
			{
				Swap((char*)base + j * width, (char*)base + (j + 1) * width, width);
			}
		}
	}
}
void print(int arr[], int sz)
{
	int i = 0;
	for (i = 0; i < sz ; i++)
	{
		printf("%d ", arr[i]);
	}
}
int cmp_int(const void* e1, const void* e2)
{
	return (*(int*)e1 - *(int*)e2);
}
void test1()
{
	int arr[] = { 2,1,3,7,8,6,5,9,4,0 };
	int sz = sizeof(arr) / sizeof(arr[0]);
	bubble_sort(arr, sz, sizeof(arr[0]), cmp_int);
	print(arr, sz);
}
int main()
{
	test1();
	return 0;
}
